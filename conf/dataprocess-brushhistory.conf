[main]
dp_list = daily_data,hourly_data,rt_data

[rt_data]
# module name
module_name = rt_jsdb_intrusion,rt_qmgr_intrusion,rt_360safe_intrusion,rt_safe_dump

# seconds. specify time intervals to fetch data
fetch_intervals = 10

# 5 minutes. specify how long time history data to brush
brush_history = 288

# handle_module. specify module to handle data
handle_module = realtime_etl

[rt_jsdb_intrusion]
query_sql = select FROM_UNIXTIME(floor(UNIX_TIMESTAMP(server_time) / 300) * 300, '%%Y-%%m-%%d %%H:%%i:00') as ds, sum(value) as y from realtime_db.rt_safe_realtime_incursion where UNIX_TIMESTAMP(server_time) between floor((UNIX_TIMESTAMP(now())-${TIMES}*300)/300)*300 and UNIX_TIMESTAMP(now()) and type = 'ear10_inst_node_cs' and name = '3,0,1' group by floor(UNIX_TIMESTAMP(server_time) / 300) * 300 order by floor(UNIX_TIMESTAMP(server_time) / 300) * 300 asc

[rt_qmgr_intrusion]
query_sql = select FROM_UNIXTIME(floor(UNIX_TIMESTAMP(server_time) / 300) * 300, '%%Y-%%m-%%d %%H:%%i:00') as ds, sum(value) as y from realtime_db.rt_safe_realtime_incursion where UNIX_TIMESTAMP(server_time) between floor((UNIX_TIMESTAMP(now())-${TIMES}*300)/300)*300 and UNIX_TIMESTAMP(now()) and type = 'ear10_inst_node_cs' and name = '2,0,1' group by floor(UNIX_TIMESTAMP(server_time) / 300) * 300 order by floor(UNIX_TIMESTAMP(server_time) / 300) * 300 asc

[rt_360safe_intrusion]
query_sql = select FROM_UNIXTIME(floor(UNIX_TIMESTAMP(server_time) / 300) * 300, '%%Y-%%m-%%d %%H:%%i:00') as ds, sum(value) as y from realtime_db.rt_safe_realtime_incursion where UNIX_TIMESTAMP(server_time) between floor((UNIX_TIMESTAMP(now())-${TIMES}*300)/300)*300 and UNIX_TIMESTAMP(now()) and type = 'ear10_inst_node_cs' and name = '1,0,1' group by floor(UNIX_TIMESTAMP(server_time) / 300) * 300 order by floor(UNIX_TIMESTAMP(server_time) / 300) * 300 asc

[rt_safe_dump]
query_sql = select data_tm as ds, dump_alarm_json as y from dm_db.dm_product_safe_dump_stat where type='safe_rt_dump_alarm' order by data_tm desc limit ${TIMES}

[hourly_data]

# 2 hours. specify how long time history data to brush
brush_history = 192

fetch_intervals = 30

module_name = hourly_safe_dau,hourly_safe_install,hourly_safe_uninstall,hourly_browser_dau,hourly_browser_install,hourly_browser_uninstall,hourly_pinyin_dau,hourly_pinyin_install,hourly_pinyin_uninstall

handle_module = hourly_etl

[hourly_safe_dau]
query_sql = select concat(p_dt, ' ', p_hours, ':00:00') as ds, sum(count) as y from dm_db.dm_product_safe_kpi_hour where concat(p_dt, ' ', p_hours) between date_format(date_sub(now(), interval ${TIMES} hour), '%%Y-%%m-%%d %%H') and date_format(date_sub(now(), interval 1 hour), '%%Y-%%m-%%d %%H') and p_type=1 group by p_dt, p_hours

[hourly_safe_install]
query_sql = select concat(p_dt, ' ', p_hours, ':00:00') as ds, sum(count) as y from dm_db.dm_product_safe_kpi_hour where concat(p_dt, ' ', p_hours) between date_format(date_sub(now(), interval ${TIMES} hour), '%%Y-%%m-%%d %%H') and date_format(date_sub(now(), interval 1 hour), '%%Y-%%m-%%d %%H') and p_type=0 group by p_dt, p_hours

[hourly_safe_uninstall]
query_sql = select concat(p_dt, ' ', p_hours, ':00:00') as ds, sum(count) as y from dm_db.dm_product_safe_kpi_hour where concat(p_dt, ' ', p_hours) between date_format(date_sub(now(), interval ${TIMES} hour), '%%Y-%%m-%%d %%H') and date_format(date_sub(now(), interval 1 hour), '%%Y-%%m-%%d %%H') and p_type=2 group by p_dt, p_hours

[hourly_browser_dau]
query_sql = select concat(p_dt, ' ', p_hours, ':00:00') as ds, sum(count) as y from dm_db.dm_product_browser_kpi_hour where concat(p_dt, ' ', p_hours) between date_format(date_sub(now(), interval ${TIMES} hour), '%%Y-%%m-%%d %%H') and date_format(date_sub(now(), interval 1 hour), '%%Y-%%m-%%d %%H') and p_type=1 group by p_dt, p_hours

[hourly_browser_install]
query_sql = select concat(p_dt, ' ', p_hours, ':00:00') as ds, sum(count) as y from dm_db.dm_product_browser_kpi_hour where concat(p_dt, ' ', p_hours) between date_format(date_sub(now(), interval ${TIMES} hour), '%%Y-%%m-%%d %%H') and date_format(date_sub(now(), interval 1 hour), '%%Y-%%m-%%d %%H') and p_type=0 group by p_dt, p_hours

[hourly_browser_uninstall]
query_sql = select concat(p_dt, ' ', p_hours, ':00:00') as ds, sum(count) as y from dm_db.dm_product_browser_kpi_hour where concat(p_dt, ' ', p_hours) between date_format(date_sub(now(), interval ${TIMES} hour), '%%Y-%%m-%%d %%H') and date_format(date_sub(now(), interval 1 hour), '%%Y-%%m-%%d %%H') and p_type=2 group by p_dt, p_hours

[hourly_pinyin_dau]
query_sql = select concat(p_dt, ' ', p_hours, ':00:00') as ds, sum(count) as y from dm_db.dm_product_pinyin_kpi_hour where concat(p_dt, ' ', p_hours) between date_format(date_sub(now(), interval ${TIMES} hour), '%%Y-%%m-%%d %%H') and date_format(date_sub(now(), interval 1 hour), '%%Y-%%m-%%d %%H') and p_type=1 group by p_dt, p_hours

[hourly_pinyin_install]
query_sql = select concat(p_dt, ' ', p_hours, ':00:00') as ds, sum(count) as y from dm_db.dm_product_pinyin_kpi_hour where concat(p_dt, ' ', p_hours) between date_format(date_sub(now(), interval ${TIMES} hour), '%%Y-%%m-%%d %%H') and date_format(date_sub(now(), interval 1 hour), '%%Y-%%m-%%d %%H') and p_type=0 group by p_dt, p_hours

[hourly_pinyin_uninstall]
query_sql = select concat(p_dt, ' ', p_hours, ':00:00') as ds, sum(count) as y from dm_db.dm_product_pinyin_kpi_hour where concat(p_dt, ' ', p_hours) between date_format(date_sub(now(), interval ${TIMES} hour), '%%Y-%%m-%%d %%H') and date_format(date_sub(now(), interval 1 hour), '%%Y-%%m-%%d %%H') and p_type=2 group by p_dt, p_hours



[daily_data]
brush_history = 16
at = 09:26
module_name = daily_safe_dau,daily_safe_odd_index,daily_safe_odd_scenes,daily_browser_dau,daily_browser_odd_index,daily_browser_odd_scenes,daily_pinyin_dau,daily_pinyin_odd_index,daily_pinyin_odd_scenes,daily_pic_dau,daily_haozip_dau,daily_360safe_intrusion,daily_360safe_intrusion_rate,daily_qmgr_intrusion,daily_qmgr_intrusion_rate,daily_jsdb_intrusion,daily_jsdb_intrusion_rate,daily_qb_intrusion,daily_qb_intrusion_rate,daily_sogoue_intrusion,daily_sogoue_intrusion_rate,daily_sogouimei_intrusion,daily_sogouimei_intrusion_rate,daily_safe_browser_use,daily_all_overlap,daily_safe_overlap,daily_homepage_locked_navigation,daily_homepage_navigation_actual,daily_homepage_locked_save_navigation,daily_homepage_safe_soft_set,daily_homepage_browser_safe_set,daily_safe_version_distribute,daily_dll_promote_safe,daily_safe_growth_space,daily_browser_growth_space,daily_pinyin_growth_space,daily_safe_main_report


handle_module = daily_etl

[daily_safe_dau]
query_sql = select p_dt as ds, daily_active as y from dm_db.dm_product_safe_kpi_day where p_dt between date_sub('${YESTERDAY}', interval ${TIMES} day) and '${YESTERDAY}'

[daily_safe_odd_index]
query_sql = select data_date as ds, odd_index as y from da_db.scenes_conclusion_info_norm a where scenes_id = 3 and data_date = '${YESTERDAY}'

[daily_safe_odd_scenes]
query_sql = select data_date as ds, product_name,concat('[',group_concat('{"scenes_name":"',a.scenes_name,'","odd_index":"',a.odd_index,'","odd_rst":"',a.odd_rst,'"}'), ']') as y from (select a.*, if(a.product_name=@sn,@i:=@i+ 1,@i:=1) rank, @sn:=a.product_name as sn from ( select a.data_date, b.product_name, b.scenes_name, truncate(a.odd_index * 100,2) as odd_index, case when a.odd_index * 100 >=0 and a.odd_index * 100 < 84.13 then '正常' when a.odd_index * 100 >=84.13 and a.odd_index * 100 < 97.72 then '低异常' when a.odd_index * 100 >=97.72 and a.odd_index * 100 < 99.87 then '中异常' when a.odd_index * 100 >= 99.87 then '高异常' else '无' end as odd_rst from da_db.scenes_conclusion_info_norm a left join da_db.scenes_config_info_norm b on a.scenes_id = b.id where a.data_date between date_sub('${YESTERDAY}', interval ${TIMES} day) and '${YESTERDAY}' and data_hour='' order by data_date, b.product_name,odd_index desc ) a,(select @sn:=null,@i:= 0) b) a where rank < 6 and product_name='2345安全卫士' group by data_date, product_name

[daily_browser_dau]
query_sql = select p_dt as ds, daily_active as y from dm_db.dm_product_browser_kpi_day where p_dt between date_sub('${YESTERDAY}', interval ${TIMES} day) and '${YESTERDAY}'

[daily_browser_odd_index]
query_sql = select data_date as ds, odd_index as y from da_db.scenes_conclusion_info_norm a where scenes_id = 114 and data_date between date_sub('${YESTERDAY}', interval ${TIMES} day) and '${YESTERDAY}'

[daily_browser_odd_scenes]
query_sql = select data_date as ds, product_name,concat('[',group_concat('{"scenes_name":"',a.scenes_name,'","odd_index":"',a.odd_index,'","odd_rst":"',a.odd_rst,'"}'), ']') as y from (select a.*, if(a.product_name=@sn,@i:=@i+ 1,@i:=1) rank, @sn:=a.product_name as sn from ( select a.data_date, b.product_name, b.scenes_name, truncate(a.odd_index * 100,2) as odd_index, case when a.odd_index * 100 >=0 and a.odd_index * 100 < 84.13 then '正常' when a.odd_index * 100 >=84.13 and a.odd_index * 100 < 97.72 then '低异常' when a.odd_index * 100 >=97.72 and a.odd_index * 100 < 99.87 then '中异常' when a.odd_index * 100 >= 99.87 then '高异常' else '无' end as odd_rst from da_db.scenes_conclusion_info_norm a left join da_db.scenes_config_info_norm b on a.scenes_id = b.id where a.data_date between date_sub('${YESTERDAY}', interval ${TIMES} day) and '${YESTERDAY}' and data_hour='' order by data_date, b.product_name,odd_index desc ) a,(select @sn:=null,@i:= 0) b) a where rank < 6 and product_name='2345浏览器' group by data_date, product_name

[daily_pinyin_dau]
query_sql = select p_dt as ds, daily_active as y from dm_db.dm_product_pinyin_kpi_day where p_dt between date_sub('${YESTERDAY}', interval ${TIMES} day) and '${YESTERDAY}'

[daily_pinyin_odd_index]
query_sql = select data_date as ds, odd_index as y from da_db.scenes_conclusion_info_norm a where scenes_id = 203 and data_date between date_sub('${YESTERDAY}', interval ${TIMES} day) and '${YESTERDAY}'

[daily_pinyin_odd_scenes]
query_sql = select data_date as ds, product_name,concat('[',group_concat('{"scenes_name":"',a.scenes_name,'","odd_index":"',a.odd_index,'","odd_rst":"',a.odd_rst,'"}'), ']') as y from (select a.*, if(a.product_name=@sn,@i:=@i+ 1,@i:=1) rank, @sn:=a.product_name as sn from ( select a.data_date, b.product_name, b.scenes_name, truncate(a.odd_index * 100,2) as odd_index, case when a.odd_index * 100 >=0 and a.odd_index * 100 < 84.13 then '正常' when a.odd_index * 100 >=84.13 and a.odd_index * 100 < 97.72 then '低异常' when a.odd_index * 100 >=97.72 and a.odd_index * 100 < 99.87 then '中异常' when a.odd_index * 100 >= 99.87 then '高异常' else '无' end as odd_rst from da_db.scenes_conclusion_info_norm a left join da_db.scenes_config_info_norm b on a.scenes_id = b.id where a.data_date between date_sub('${YESTERDAY}', interval ${TIMES} day) and '${YESTERDAY}' and data_hour='' order by data_date, b.product_name,odd_index desc ) a,(select @sn:=null,@i:= 0) b) a where rank < 6 and product_name='2345输入法' group by data_date, product_name

[daily_pic_dau]
query_sql = select p_dt as ds, daily_active as y from dm_db.dm_product_pic_kpi_day where p_dt between date_sub('${YESTERDAY}', interval ${TIMES} day) and '${YESTERDAY}'

[daily_haozip_dau]
query_sql = select p_dt as ds, daily_active as y from dm_db.dm_product_haozip_kpi_day where p_dt between date_sub('${YESTERDAY}', interval ${TIMES} day) and '${YESTERDAY}'

[daily_360safe_intrusion]
query_sql = select p_dt as ds, intrusion_cn as y from dm_db.dm_comp_monitor_intrusion_day where p_dt between date_sub('${YESTERDAY}', interval ${TIMES} day) and '${YESTERDAY}' and comp_product = '360安全卫士'

[daily_360safe_intrusion_rate]
query_sql = select p_dt as ds, convert(convert(intrusion_cn/active_cn, decimal(10,6)), decimal(10,6)) as y from dm_db.dm_comp_monitor_intrusion_day where p_dt between date_sub('${YESTERDAY}', interval ${TIMES} day) and '${YESTERDAY}' and comp_product = '360安全卫士'

[daily_qmgr_intrusion]
query_sql = select p_dt as ds, intrusion_cn as y from dm_db.dm_comp_monitor_intrusion_day where p_dt between date_sub('${YESTERDAY}', interval ${TIMES} day) and '${YESTERDAY}' and comp_product = '电脑管家'

[daily_qmgr_intrusion_rate]
query_sql = select p_dt as ds, convert(intrusion_cn/active_cn, decimal(10,6)) as y from dm_db.dm_comp_monitor_intrusion_day where p_dt between date_sub('${YESTERDAY}', interval ${TIMES} day) and '${YESTERDAY}' and comp_product = '电脑管家'

[daily_jsdb_intrusion]
query_sql = select p_dt as ds, intrusion_cn as y from dm_db.dm_comp_monitor_intrusion_day where p_dt between date_sub('${YESTERDAY}', interval ${TIMES} day) and '${YESTERDAY}' and comp_product = '金山毒霸'

[daily_jsdb_intrusion_rate]
query_sql = select p_dt as ds, convert(intrusion_cn/active_cn, decimal(10,6)) as y from dm_db.dm_comp_monitor_intrusion_day where p_dt between date_sub('${YESTERDAY}', interval ${TIMES} day) and '${YESTERDAY}' and comp_product = '金山毒霸'

[daily_qb_intrusion]
query_sql = select p_dt as ds, intrusion_cn as y from dm_db.dm_comp_monitor_intrusion_day where p_dt between date_sub('${YESTERDAY}', interval ${TIMES} day) and '${YESTERDAY}' and comp_product = 'QQ浏览器'

[daily_qb_intrusion_rate]
query_sql = select p_dt as ds, convert(intrusion_cn/active_cn, decimal(10,6)) as y from dm_db.dm_comp_monitor_intrusion_day where p_dt between date_sub('${YESTERDAY}', interval ${TIMES} day) and '${YESTERDAY}' and comp_product = 'QQ浏览器'

[daily_sogoue_intrusion]
query_sql = select p_dt as ds, intrusion_cn as y from dm_db.dm_comp_monitor_intrusion_day where p_dt between date_sub('${YESTERDAY}', interval ${TIMES} day) and '${YESTERDAY}' and comp_product = '搜狗浏览器'

[daily_sogoue_intrusion_rate]
query_sql = select p_dt as ds, convert(intrusion_cn/active_cn, decimal(10,6)) as y from dm_db.dm_comp_monitor_intrusion_day where p_dt between date_sub('${YESTERDAY}', interval ${TIMES} day) and '${YESTERDAY}' and comp_product = '搜狗浏览器'

[daily_sogouimei_intrusion]
query_sql = select p_dt as ds, intrusion_cn as y from dm_db.dm_comp_monitor_intrusion_day where p_dt between date_sub('${YESTERDAY}', interval ${TIMES} day) and '${YESTERDAY}' and comp_product = '搜狗输入法'

[daily_sogouimei_intrusion_rate]
query_sql = select p_dt as ds, convert(intrusion_cn/active_cn, decimal(10,6)) as y from dm_db.dm_comp_monitor_intrusion_day where p_dt between date_sub('${YESTERDAY}', interval ${TIMES} day) and '${YESTERDAY}' and comp_product = '搜狗输入法'

[daily_all_overlap]
query_sql = select p_dt ds, item_json as y from dm_db.dm_common_cover_overlap_install_day where p_dt = '${YESTERDAY}' and product_id = '2345All'

[daily_safe_overlap]
query_sql = select p_dt ds, product_user_cn_json as y from dm_db.dm_safe_overlap_install_day where p_dt = '${YESTERDAY}'

[daily_safe_browser_use]
query_sql = select p_dt as ds, concat('{"2345浏览器":', 2345_browser_user_numbers/browser_user_numbers, ',"IE浏览器":', ie_user_numbers/browser_user_numbers, ',"QQ浏览器":', qb_user_numbers/browser_user_numbers, ',"360安全浏览器":', 360se_user_numbers/browser_user_numbers, ',"搜狗浏览器":', sougoue_user_numbers/browser_user_numbers, ',"猎豹浏览器":', liebao_user_numbers/browser_user_numbers, ',"chrome":', chrome_user_numbers/browser_user_numbers,'}') as y from dm_db.dm_product_safe_general_data_add_browser_user_number where p_dt = '${YESTERDAY}' 

[daily_homepage_locked_navigation]
query_sql = select p_dt as ds ,cast(dw_db.get_json_object(browser_locked_cn_json, 'IE主页锁定保护量-主页锁定控盘导航量') as unsigned int) as y from dm_db.dm_safe_browser_locked where p_dt between date_sub('${YESTERDAY}', interval ${TIMES} day) and '${YESTERDAY}'

[daily_homepage_locked_save_navigation]
query_sql = select p_dt as ds, cast(dw_db.get_json_object(browser_locked_cn_json, 'ie_protect_cn') as unsigned int) as y from dm_db.dm_safe_browser_locked where p_dt between date_sub('${YESTERDAY}', interval ${TIMES} day) and '${YESTERDAY}'

[daily_homepage_navigation_actual]
query_sql = select a.p_dt as ds, cast(a.rst/(b.rst/c.rst) as unsigned int) as y from ( select p_dt ,cast(dw_db.get_json_object(browser_lock_cn_json, 'lock_S') as unsigned int) as rst from dm_db.dm_safe_navigation_kpi_stat where p_dt between date_sub('${YESTERDAY}', interval ${TIMES} day) and '${YESTERDAY}') a left join (select p_dt ,cast(dw_db.get_json_object(browser_locked_cn_json, '3.7以上非积分渠道日活') as unsigned int) as rst from dm_db.dm_safe_browser_locked where p_dt between date_sub('${YESTERDAY}', interval ${TIMES} day) and '${YESTERDAY}') b on a.p_dt=b.p_dt left join (select p_dt ,cast(dw_db.get_json_object(browser_locked_cn_json, '卫士日活总量') as unsigned int) as rst from dm_db.dm_safe_browser_locked where p_dt between date_sub('${YESTERDAY}', interval ${TIMES} day) and '${YESTERDAY}') c on a.p_dt=c.p_dt

[daily_homepage_safe_soft_set]
query_sql = select p_dt as ds, count as y from dm_db.dm_product_navigation_set_link_stat where p_dt between date_sub('${YESTERDAY}', interval ${TIMES} day) and '${YESTERDAY}' and kpi_name='卫士&软管直设'

[daily_homepage_browser_safe_set]
query_sql = select p_dt as ds, count as y from dm_db.dm_product_navigation_set_link_stat where p_dt between date_sub('${YESTERDAY}', interval ${TIMES} day) and '${YESTERDAY}' and kpi_name='浏览器&&卫士保护非直设量'

[daily_safe_version_distribute]
query_sql = select p_dt as ds, concat('{', group_concat('"', major_version, '":', ct), '}') as y from (select p_dt, major_version, sum(count) ct from dm_db.dm_product_safe_kpi_hour where p_dt='${YESTERDAY}' and p_type='1' group by p_dt, major_version ) a group by p_dt

[daily_dll_promote_safe]
query_sql = select p_dt as ds, concat('{', group_concat('"', channel, '":{"sum_cn":', sum_cn, ',"fail_rate":', fail_rate, '}'), '}') as y from (select p_dt, channel, sum(count) as sum_cn, sum(case when errorcode != '0' then count else 0 end)/sum(count) as fail_rate from dm_db.dm_channel_inst_log_promote_count where p_dt between date_sub('${YESTERDAY}', interval ${TIMES} day) and '${YESTERDAY}'  and channel != '' and product='pcsafe' group by p_dt, channel) a group by p_dt

[daily_safe_growth_space]
query_sql = select p_dt as ds, json as y from dm_db.dm_safe_growth_space where p_dt between date_sub('${YESTERDAY}', interval ${TIMES} day) and '${YESTERDAY}'

[daily_browser_growth_space]
query_sql = select p_dt as ds, json as y from dm_db.dm_browser_growth_space where p_dt between date_sub('${YESTERDAY}', interval ${TIMES} day) and '${YESTERDAY}'

[daily_pinyin_growth_space]
query_sql = select p_dt as ds, json as y from dm_db.dm_pinyin_growth_space where p_dt between date_sub('${YESTERDAY}', interval ${TIMES} day) and '${YESTERDAY}'

[daily_safe_main_report]
query_sql = select '${YESTERDAY}' as ds, concat('{', GROUP_CONCAT('"', `name`, '":', val), '}') as y from ( select  '昨日日活' as name ,daily_active as val from dm_db.dm_product_safe_kpi_day where p_dt='${YESTERDAY}'  union all select  '独占日活' as name ,exclusive_count as val from dm_db.dm_active_user_flow_direction_day where p_dt='${YESTERDAY}'  union all select  '控盘浏览器日活' as name ,dw_db.get_json_object(item_json,'加速浏览器') as val from dm_db.dm_common_cover_overlap_install_day where p_dt='${YESTERDAY}'  and product_id='2345PCSafe'  union all select  '异常指数' as name ,round(odd_index * 100,2) as val from da_db.scenes_conclusion_info_norm where data_date='${YESTERDAY}' and scenes_id=3 ) a
